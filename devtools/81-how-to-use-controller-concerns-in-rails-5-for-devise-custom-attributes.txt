REFF:
==========================

@ PREPARE : 

cara menggunakan controller concerns pada rails 5 untuk penggunaan custom atribut devise auth
jika sebelumnya kita menerapkan custom atribut langsung pada application_controller.rb

# application_controller.rb : 

before_filter :configure_permitted_parameters, if: :devise_controller?

 class ApplicationController < ActionController::Base
  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  protect_from_forgery with: :exception

  before_action :configure_permitted_parameters, if: :devise_controller?

  def configure_permitted_parameters
  	devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
  	devise_parameter_sanitizer.permit(:account_update, keys: [:name])
  end

end

sekarang kita bisa menggunakan fungsi permitted parameter tersebut melalui concerns agar terstruktur saja tujuannya memudahkan untuk
maintenance nantinya.

1. buat file devise_whitelist.rb pada controllers/concerns/devise_whitelist.rb
- isikan : 

module DeviseWhitelist
	extend ActiveSupport::Concern

	included do
		before_action :configure_permitted_parameters, if: :devise_controller?
	end

	def configure_permitted_parameters
		devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
		devise_parameter_sanitizer.permit(:account_update, keys: [:name])
	end
end

2. pada app/controllers/application_controller.rb
- tambahkan : 

# Jika Menggunakan Concerns untuk permitted parameter devise
  include DeviseWhitelist  #in module /controllers/concerns/devise_whiteliset.rb

- uncomment fungsi permitted parameter devise yang tanpa concernsnya :

 ## jika tidak menggunakan concerns untuk permitted parameter devise
  # before_action :configure_permitted_parameters, if: :devise_controller?
  # def configure_permitted_parameters
  # 	devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
  # 	devise_parameter_sanitizer.permit(:account_update, keys: [:name])
  # end

- sehingga : 

class ApplicationController < ActionController::Base
  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  protect_from_forgery with: :exception

  # # jika tidak menggunakan concerns untuk permitted parameter devise
  # before_action :configure_permitted_parameters, if: :devise_controller?

  # def configure_permitted_parameters
  # 	devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
  # 	devise_parameter_sanitizer.permit(:account_update, keys: [:name])
  # end

  # Jika Menggunakan Concerns untuk permitted parameter devise
  include DeviseWhitelist  #in module /controllers/concerns/devise_whiteliset.rb

end

3. rails s # coba signup, login, edit-update pastikan field name tadi berubah dan fungsi permitted parameters devise sama seperti cara tanpa concerns sebelumnya

4. git status
git add .
git commit -m ""
git commit -m "Added controller concerns for devise params"
git push origin authentication
