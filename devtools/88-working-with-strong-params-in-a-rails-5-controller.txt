REFF:
==============
cara kerja dengan parameter yang hebat di rails 5

1. buka config/application.rb
tambahkan pada class Application : 

  config.action_controller.
     permit_all_parameters = true

- sehingga : 

require_relative 'boot'

require 'rails/all'

# Require the gems listed in Gemfile, including any gems
# you've limited to :test, :development, or :production.
Bundler.require(*Rails.groups)

module ProfessionalRailsLimaDevelopmentCourse
  class Application < Rails::Application
    # Initialize configuration defaults for originally generated Rails version.
    config.load_defaults 5.1

    # Settings in config/environments/* take precedence over those specified here.
    # Application configuration should go into files in config/initializers
    # -- all .rb files in that directory are automatically loaded.
    config.action_controller.
    	permit_all_parameters = true
  end
end


2. 

3. membuat permit lebih tertata rapih 
- buka app/controllers/portfolios_controller.rb

## pada def update :

def update
	@portfolio_item = Portfolio.find(params[:id])
	respond_to do |format|
		if @portfolio_item.update()
			format.html { redirect_to portfolios_path, notice: 'Portfolios was successfully updated.' }
			format.json { render :show, status: :ok, location: @portfolio_item }
		else
			format.html { render :edit }
			format.json { render json: @portfolio_item.errors, status: :unprocessable_entity }
		end
	end
end

- ubah :

if @portfolio_item.update(params.require(:portfolio).permit(:title, :subtitle, :body))

menjadi :

if @portfolio_item.update(portfolio_params)

## pada def create :

	def create
	@portfolio_item = Portfolio.new(params.require(:portfolio).permit(:title, :subtitle, :body, technologies_attributes: [:name]))  #pakai params.require(:portfolio).permit(:title, :subtitle, :body) supaya aman 
	
	respond_to do |format|
		if @portfolio_item.save 
      	format.html { redirect_to portfolios_path, notice: 'Portfolio was successfully created.' } #portolios_path dari routes prefix
      	format.json { render :show, status: :ok, location: @portfolio_item }
      else
      	format.html { render :new }
      	format.json { render json: @portfolio_item.errors, status: :unprocessable_entity }
      end
  end
end

- ubah : 

@portfolio_item = Portfolio.new(params.require(:portfolio).permit(:title, :subtitle, :body, technologies_attributes: [:name]))

menjadi : 

@portfolio_item = Portfolio.new(portfolio_params) 

4. pada portfolios_controller.rb
tambahkan :

private 

def portfolio_params
	params.require(:portfolio).permit(:title, 
									  :subtitle, 
									  :body, 
									  technologies_attributes: [:name]
									  )
end

# pada def create 

sehingga :

def create
	@portfolio_item = Portfolio.new(portfolio_params) 

# pada def update 
sehingga :

if @portfolio_item.update(portfolio_params)

# sehingga keseluruhan : 

class PortfoliosController < ApplicationController
	def index
		@portfolio_items = Portfolio.all
		# @portfolio_items = Portfolio.where(subtitle: 'Ruby On Rails')
		# @portfolio_items = Portfolio.angular # dari method self.angular dari model portfolio.rb
		# @portfolio_items = Portfolio.ruby_on_rails_portfolio_items # dari scope dari model portfolio.rb
	end

	def angular
		@angular_portfolio_items = Portfolio.angular # dari method self.angular di model portfolio.rb 
	end

	def show
	end

	def new
		@portfolio_item = Portfolio.new
		3.times { @portfolio_item.technologies.build }
	end

	def create
	@portfolio_item = Portfolio.new(portfolio_params)  #pakai params.require(:portfolio).permit(:title, :subtitle, :body) supaya aman 
	
	respond_to do |format|
		if @portfolio_item.save 
      	format.html { redirect_to portfolios_path, notice: 'Portfolio was successfully created.' } #portolios_path dari routes prefix
      	format.json { render :show, status: :ok, location: @portfolio_item }
      else
      	format.html { render :new }
      	format.json { render json: @portfolio_item.errors, status: :unprocessable_entity }
      end
  end
end

def edit
	@portfolio_item = Portfolio.find(params[:id])	
end

def update
	@portfolio_item = Portfolio.find(params[:id])
	respond_to do |format|
		# if @portfolio_item.update(params.require(:portfolio).permit(:title, :subtitle, :body))
		if @portfolio_item.update(portfolio_params)
			format.html { redirect_to portfolios_path, notice: 'Portfolios was successfully updated.' }
			format.json { render :show, status: :ok, location: @portfolio_item }
		else
			format.html { render :edit }
			format.json { render json: @portfolio_item.errors, status: :unprocessable_entity }
		end
	end
end

def show
	@portfolio_item = Portfolio.find(params[:id])
end

def destroy
	# perform the lookup
	@portfolio_item = Portfolio.find(params[:id])

	# destroy/delete  the record
	@portfolio_item.destroy

	#redirect
	respond_to do |format|
		format.html { redirect_to portfolios_url, notice: 'Record was removed.' }
	end
end

private

def portfolio_params
	params.require(:portfolio).permit(:title, 
									  :subtitle, 
									  :body, 
									  technologies_attributes: [:name]
									  )
end

end


5. git status
git add .
git commit -m "Refactored strong params for portfolio items"
git push origin controller
