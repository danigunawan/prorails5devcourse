##### PART 1 ######

REFF:
https://github.com/elorest/petergate

implementasi petergate
untuk permission
============
1. kita punya method untuk mendefinisikan action/method guest user maupun current user pada :

app\controllers\concerns\current_user_concern.rb

isi : 

def guest_user
		OpenStruct.new(name: "Guest User", 
					   first_name: "Guest", 
					   last_name: "User", 
					   email: "guest@asdf.com"
					   )
	end

- untuk menerapkan implementasi guest_user kita perlu membuat model guest_user dan memodifikasinya :


- pada app\controllers\concerns\current_user_concern.rb cut bagian dibawah ini untuk nanti dipindahkan pada pattern model guest_user.rb: 

OpenStruct.new(name: "Guest User", 
					   first_name: "Guest", 
					   last_name: "User", 
					   email: "guest@asdf.com"
					   )


- buat model guest_user.rb

# karena pada pattern concerns current_user_concern.rb ini diimplementasikan untuk guest_user.rb
#maka openstruct ini tidak digunakan lagi :

#OpenStruct.new(name: "Guest User", 
#					   first_name: "Guest", 
#					   last_name: "User", 
#					   email: 

namun yang digunakan adalah syntax model guest_user dibawah ini untuk mendefinisikan user tersebut punya guest user untuk diimplementasikan pada paket petergate 

# sehingga pada model guest_user.rb :


class GuestUser < User # karena kita akan membuat guest user maka class GuestUser mengextend class Parent User atau induknya
	attr_accessor :name, :first_name, :last_name, :email
end


- coba login logout : saat kita login maka current user masih guest 
perlu perubahan pada application_helper.rb

# ubah ini : 

def login_helper
		if current_user.is_a?(User)
			link_to "Logout", destroy_user_session_path, method: :delete
		else
			(link_to "Register", new_user_registration_path) + "<br>".html_safe +
			(link_to "Login", new_user_session_path)
		end
	end

# menjadi :
## fungsi dibawah ini ketika current user belum login maka ia adalah GuestUser elsif dia user

def login_helper
		if current_user.is_a?(GuestUser)
			(link_to "Register", new_user_registration_path) + "<br>".html_safe +
			(link_to "Login", new_user_session_path)
		else
			link_to "Logout", destroy_user_session_path, method: :delete
		end
	end



2. kita akan membuat roles & permission untuk current user mempunyai akses site admin dan semua fungsi manipulasi di objek blog bisa digunakan baik itu crud dan lainnya
- buka model user.rb
ubah dari : 


petergate(roles: [:admin, :editor], multiple: false)   

menjadi :

petergate(roles: [:site_admin], multiple: false)   

# referensi roles snippet ada di : https://github.com/elorest/petergate


- buka blogs_controller.rb

#tambahkan : 

#petergate
  access all: [:show, :index], user: {except: [:destroy, :new, :create, :update, :edit]}, site_admin: :all


# sehingga persis dibawah ini : 

class BlogsController < ApplicationController
  before_action :set_blog, only: [:show, :edit, :update, :destroy, :toggle_status] # sebelum aksi show edit update destroy memanggil call back dulu yakni set_blog
  layout "blog"

  #petergate
  access all: [:show, :index], user: {except: [:destroy, :new, :create, :update, :edit]}, site_admin: :all 

## semua guest/all hanya show dan index, user bisa menggunakan fungsi selain :destroy, :new, :create, :update, :edit
## jika site_admin: :all semua fungsi bisa

3. kita coba menggunakan IRB/rails c
# kita ubah user dengan id yang pertama dengan roles site_admin
- User.first
- User.first.update!(roles: "site_admin")

4. rails s


##### PART 2 ######

5. coba login dengan user biasa
dan coba create blog dipastikan tidak bisa karena bukan roles site_admin

6. kita hide fungsi new blog selain roles site_admin

jadi new blog akan muncul pada roles site_admin saja :

- buka app\views\blogs\index.html.erb
ubah :

<%= link_to 'New Blog', new_blog_path %>

menjadi :

<%= link_to 'New Blog', new_blog_path if logged_in?(:site_admin)%>

- buka \app\views\blogs\_blog.html.erb

ubah :

	<td><%= link_to 'Edit', edit_blog_path(blog) %></td>
	<td><%= link_to 'Delete Post', blog, method: :delete, data: { confirm: 'Are you sure?' } %></td>

menjadi :

	<td><%= link_to 'Edit', edit_blog_path(blog) if logged_in?(:site_admin) %></td>
	<td><%= link_to 'Delete Post', blog, method: :delete, data: { confirm: 'Are you sure?' } if logged_in?(:site_admin) %></td>


7. membuat permission juga untuk portofolios_controller.rb / object portfolio
tambahkan :

  #petergate
  access all: [:show, :index, :angular], user: {except: [:destroy, :new, :create, :update, :edit]}, site_admin: :all


sehingga menjadi persis posisinya :

class PortfoliosController < ApplicationController
	before_action :set_portfolio_item, only: [:edit, :show, :update, :destroy]
	layout "portfolio"

	  #petergate
	  access all: [:show, :index, :angular], user: {except: [:destroy, :new, :create, :update, :edit]}, site_admin: :all

# access all :angular adalah method dari :

def angular
		@angular_portfolio_items = Portfolio.angular # dari method self.angular di model portfolio.rb 
	end

8. kita akan hide edit blog pada blogs/show.html.erb

kita ubah :

<%= link_to 'Edit', edit_blog_path(@blog) %>

menjadi : 

<%= link_to 'Edit', edit_blog_path(@blog) if loggin?(:site_admin) %>

9. kita akan hide new portfolios kecuali roles site_admin
- buka \app\views\portfolios\index.html.erb

ubah :

<%= link_to "Create New Item", new_portfolio_url %>

menjadi : 

<%= link_to "Create New Item", new_portfolio_url if logged_in?(:site_admin)%>

- lalu pada buka \app\views\portfolios\angular.html.erb
ubah : 
<%= link_to "Create New Item", new_portfolio_url %>

<%= link_to "Edit", edit_portfolio_path(portfolio_item.id) %>
<%= link_to 'Delete Portfolio Item', portfolio_path(portfolio_item), method: :delete, data: { confirm: 'Are you sure?' } %>
menjadi :
<%= link_to "Create New Item", new_portfolio_url if logged_in?(:site_admin) %>
<%= link_to "Edit", edit_portfolio_path(portfolio_item.id) if logged_in?(:site_admin)%>
<%= link_to 'Delete Portfolio Item', portfolio_path(portfolio_item), method: :delete, data: { confirm: 'Are you sure?' } if logged_in?(:site_admin) %>

10. lalu pada buka \app\views\portfolios\_portfolio_item.html.erb

kita hide juga kecuali site_admin :

ubah ini :

	<%= link_to "Edit", edit_portfolio_path(portfolio_item.id) %>
	<%= link_to 'Delete Portfolio Item', portfolio_path(portfolio_item), method: :delete, data: { confirm: 'Are you sure?' } %>

menjadi :

<%= link_to "Edit", edit_portfolio_path(portfolio_item.id) if logged_in?(:site_admin)%>
<%= link_to 'Delete Portfolio Item', portfolio_path(portfolio_item), method: :delete, data: { confirm: 'Are you sure?' } if logged_in?(:site_admin) %>

11. kita push ke branch authorization
git status
git add .
git commit -m "Implemented authorization engine for portfolio items and blogs"
git push origin authorization

# kita akan switch branch dari authorization ke master

git checkout master

# lalu kita merge authorization

git merge authorization
git push