REFF:
====================
1. buka seed.rb tambahkan:

  3.times do |topic|
	Topic.create!(
		title: "#{topic}"
		)
  end

2. pada seed blog tambahkan FK topic_id: Topic.last.id, sehingga :
  
  10.times do |blog|
	Blog.create!(
		title: "My Blog Post #{blog}",
		body: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ducimus atque molestias voluptates minus iusto pariatur aliquam, nulla exercitationem et necessitatibus ratione ipsam maiores dolorem a repellendus, vel harum, ut modi.",
		topic_id: Topic.last.id		
		)
  end

3. pada seed portfolio 

- ubah menjadi 8x insert:

  8.times do |portfolio_item|
	Portfolio.create!(
		title: "Portfolio title: #{portfolio_item}",
		subtitle: "Ruby On Rails",
		body: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorem, ipsum facere quam nisi culpa quae aliquam magni modi dicta est sed enim. Magnam nulla praesentium voluptatem quos facere delectus veritatis.",
		main_image: "http://placehold.it/600x400",
		thumb_image: "http://placehold.it/350x200"
		)
  end

- tambahkan dan duplikat seed portfolio dengan 1x insert dengan title angular :

  1.times do |portfolio_item|
	Portfolio.create!(
		title: "Portfolio title: #{portfolio_item}",
		subtitle: "Angular",
		body: "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorem, ipsum facere quam nisi culpa quae aliquam magni modi dicta est sed enim. Magnam nulla praesentium voluptatem quos facere delectus veritatis.",
		main_image: "http://placehold.it/600x400",
		thumb_image: "http://placehold.it/350x200"
		)
  end

4. rails db:setup
5. rails c
- Portfolio.first.subtitle
- Portfolio.last.subtitle
- Portfolio.where(subtitle: "Ruby on Rails")
- Portfolio.where(subtitle: "Ruby on Rails").count # total count
- exit() # keluar

6. rails s

7. buka portfolios_controller.rb
disini kita akan implementasikan active record where.

- ubah fungsi all dari :	
  def index
	@portfolio_items = Portfolio.all
  end

# CARA 1
- menjadi (CARA 1) :

 def index
  	# @portfolio_items = Portfolio.all
	@portfolio_items = Portfolio.where(subtitle: 'Ruby On Rails')
 end

- localhost:3000/portfolios
akan tampil semua record berdasarkan subtitle 'Ruby On Rails'

# CARA 2 (Dengan Method Self) REFF : https://stackoverflow.com/questions/13706373/what-does-def-self-function-name-mean
- jika kita ingin membuat method self yang bisa di gunakan untuk pattern di method index pada query Portfolio where tersebut di 
design di model portfolio patternnya menggunakan method self/inti, Berbeda dengan bahasa lain, Ruby tidak memiliki metode kelas, 
namun memiliki metode tunggal/singleton yang melekat pada objek tertentu.

- buka model portfolio.rb, tambahkan method self beserta nama fungsinya yang ingin di gunakan :

def.self.angular
 where(subtitle: 'Angular')
end

sehingga : 

class Portfolio < ApplicationRecord
	validates_presence_of :title, :subtitle, :body, :main_image, :thumb_image
	
        def self.angular
		where(subtitle: 'Angular')
	end
	
end


- buka portfolios_controller.rb
ubah : 

	def index
		# @portfolio_items = Portfolio.all
		@portfolio_items = Portfolio.where(subtitle: 'Ruby On Rails')
	end

menjadi : 

	def index
		# @portfolio_items = Portfolio.all
		# @portfolio_items = Portfolio.where(subtitle: 'Ruby On Rails')
		@portfolio_items = Portfolio.angular # dari method self.angular dari model portfolio.rb
	end


8. rails s coba akses kembali localhost:3000/portfolios # dia akan masih bekerja menggunakan self.angular

9. buka model portfolio.rb

tambahkan :

scope :ruby_on_rails_portfolio_items, -> { where(subtitle: 'Ruby On Rails') }

sehingga : 

class Portfolio < ApplicationRecord
	validates_presence_of :title, :subtitle, :body, :main_image, :thumb_image
	
	def self.angular
		where(subtitle: 'Angular')
	end

	scope :ruby_on_rails_portfolio_items, -> { where(subtitle: 'Ruby On Rails') }

end


10. buka portfolios_controller.rb

- tidak hanya method self.angular pada model untuk bisa menggunakan/mengakses object self angular pada model poprtfolio.rb
sehingga di portfolio_controller.rb bisa diakses seperti ini : 

@portfolio_items = Portfolio.angular # dari method self.angular dari model portfolio.rb

- namun kita juga bisa menggunakan custom scope pada model portfolio.rb pada code dibawah ini :

scope :ruby_on_rails_portfolio_items, -> { where(subtitle: 'Ruby On Rails') }


- sehingga pada controller index :

@portfolio_items = Portfolio.ruby_on_rails_portfolio_items # dari scope dari model portfolio.rb
	
lengkapnya :

	def index
		# @portfolio_items = Portfolio.all
		# @portfolio_items = Portfolio.where(subtitle: 'Ruby On Rails')
		# @portfolio_items = Portfolio.angular # dari method self.angular dari model portfolio.rb
		  @portfolio_items = Portfolio.ruby_on_rails_portfolio_items # dari scope dari model portfolio.rb
	end


## JIKA MENGGUNAKAN SCOPE SELF ANGULAR
kita akan membuat controller baru bernama angular untuk menggunakan scope self pada model Portfolio.rb
nanti jadi yang akan diakses diroute adalah localhost:3000/angular-items bukan index.

11. buka portfolios_controller.rb

- ubah :

	def index
		@portfolio_items = Portfolio.all
		# @portfolio_items = Portfolio.where(subtitle: 'Ruby On Rails')
		# @portfolio_items = Portfolio.angular # dari method self.angular dari model portfolio.rb
		# @portfolio_items = Portfolio.ruby_on_rails_portfolio_items # dari scope dari model portfolio.rb
	end

- buat method setelah def index :
	
	def angular
		@angular_portfolio_items = Portfolio.angular
	end

- buat views angular.html.erb di views/portfolios/angular.html.erb
isikan : 


<h1>Angular Portfolio Item</h1>

<%= link_to "Create New Item", new_portfolio_url %>

<% @angular_portfolio_items.each do |portfolio_item| %>
	<p><%= link_to portfolio_item.title, portfolio_show_path(portfolio_item.id) %></p>
	<p><%= portfolio_item.subtitle %></p>
	<p><%= portfolio_item.body %></p>
	<%= image_tag portfolio_item.thumb_image if !portfolio_item.thumb_image.nil? %>
	<%= link_to "Edit", edit_portfolio_path(portfolio_item.id) %>
	<%= link_to 'Delete Portfolio Item', portfolio_path(portfolio_item), method: :delete, data: { confirm: 'Are you sure?' } %>
	<a href="/portfolios/<%= portfolio_item.id%>/edit">Edit Two</a>
<% end %>


12. buka routes.rb
tambahkan : 

get 'angular-items', to: 'portfolios#angular'

13. git add .
git commit -m "implemented custom scopes for portfolio items"
git push origin data-feature